#!/bin/bash

FLAGS_ROOT=false
PUSH_KEYS=true
PUSH_SELF=true
HOST=

print_usage()
{
	echo "Usage: sshpush [-r] <host>"
	echo "  authorizes local keys on remote ssh server"
	echo "  -r  attempt to authorize for root also"
	echo "  -n  do not push keys"
	echo "  -m  when authorizing for root, do not push self"
	exit
}

## Parse arguments
while [ "X$1" != "X" ]; do
	if [[ "$1" = -* ]]; then
		case "$1" in
			"-r" ) FLAGS_ROOT=true;;
			"-n" ) PUSH_KEYS=false;;
			"-m" ) PUSH_SELF=false;;
			* ) echo "Unknown switch"; print_usage;;
		esac
	else
		if [ "X$HOST" = "X" ]; then
			HOST=$1
		else
			echo "Unexpected argument: $1"
			print_usage
		fi
	fi
	shift
done

if [ "X$HOST" = "X" ]; then
	print_usage
fi

#TODO: parse this from $HOST if it has an @
LOGIN=$(whoami)

if [ $FLAGS_ROOT = false ]; then PUSH_SELF=false; fi

pull_from_host()
{
	echo "pull"
        read -p 'Host to pull from? ' HOST
	PULLPATH=${HOST}:.ssh/id_rsa*
        scp $PULLPATH ~/.ssh/
}

if [ ! -f ~/.ssh/id_rsa ]; then
	echo "no keys on this host, select an option"
	select yn in "Pull from another host" "Generate" "Abort"; do
		case $yn in
			"Pull from another host" ) pull_from_host; break;;
			"Generate" ) ssh-keygen -t rsa -q; break;;
			"Abort" ) exit;;
		esac
	done
fi
if [ -f ~/.ssh/id_rsa ]; then
	echo "pushing authorization"
	cat ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys | ssh "${HOST}" 'cat - ~/.ssh/authorized_keys | sort -u > ~/.ssh/authorized_keys'
	if [ $PUSH_KEYS = true ]; then
		LCS=`cat ~/.ssh/id_rsa.pub | md5sum`
		RCS=`ssh "${HOST}" 'if [ -f ~/.ssh/id_rsa.pub ]; then cat ~/.ssh/id_rsa.pub | md5sum; fi'`
		if [ "X$LCS" != "X$RCS" ]; then
			echo "pushing keys"
			ssh "${HOST}" 'if [ -f ~/.ssh/id_rsa ]; then mv ~/.ssh/id_rsa ~/.ssh/id_rsa_old; mv ~/.ssh/id_rsa.pub ~/.ssh/id_rsa.pub_old; fi'
			scp ~/.ssh/id_rsa* "${HOST}":.ssh/
		else
			echo "keys match"
		fi
	fi
	if [ $FLAGS_ROOT = true ]; then
		echo "pushing root authorization"
		ssh -t "${HOST}" 'sudo mkdir -p ~root/.ssh && sudo cat ~/.ssh/authorized_keys ~root/.ssh/authorized_keys | sort -u | sudo tee ~root/.ssh/authorized_keys > /dev/null; exit'

		echo "pushing root keys"
		ssh -t root@${HOST} "cp --preserve=mode ~${LOGIN}/.ssh/id_rsa ~${LOGIN}/.ssh/id_rsa.pub ~root/.ssh/; cat ~${LOGIN}/.ssh/authorized_keys ~root/.ssh/authorized_keys | sort -u > ~root/.ssh/authorized_keys"
		if [ $PUSH_SELF = true ]; then
			echo "pushing self"
			ssh -t root@${HOST} 'mkdir -p /usr/local/bin'
			scp $0 root@${HOST}:/usr/local/bin/
		fi
	fi
else
	echo 'no keys, aborting'
fi

